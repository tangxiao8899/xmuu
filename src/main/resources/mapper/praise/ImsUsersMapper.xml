<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.carryit.base.xmuu.dao.ImsUsersMapper" >
  <resultMap id="BaseResultMap" type="com.carryit.base.xmuu.entity.ImsUsers" >
    <id column="uid" property="uid" jdbcType="INTEGER" />
    <result column="groupid" property="groupid" jdbcType="INTEGER" />
    <result column="username" property="username" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="salt" property="salt" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="TINYINT" />
    <result column="joindate" property="joindate" jdbcType="INTEGER" />
    <result column="joinip" property="joinip" jdbcType="VARCHAR" />
    <result column="lastvisit" property="lastvisit" jdbcType="INTEGER" />
    <result column="lastip" property="lastip" jdbcType="VARCHAR" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="ucuserid" property="ucuserid" jdbcType="INTEGER" />
    <result column="viptime" property="viptime" jdbcType="VARCHAR" />
    <result column="starttime" property="starttime" jdbcType="INTEGER" />
    <result column="endtime" property="endtime" jdbcType="INTEGER" />
    <result column="credit1" property="credit1" jdbcType="DECIMAL" />
    <result column="credit2" property="credit2" jdbcType="DECIMAL" />
    <result column="type" property="type" jdbcType="TINYINT" />
    <result column="owner_uid" property="ownerUid" jdbcType="INTEGER" />
    <result column="founder_groupid" property="founderGroupid" jdbcType="TINYINT" />
    <result column="agentid" property="agentid" jdbcType="INTEGER" />
    <result column="register_type" property="registerType" jdbcType="TINYINT" />
    <result column="openid" property="openid" jdbcType="VARCHAR" />
    <result column="age" property="age" jdbcType="INTEGER" />
    <result column="idCard" property="idcard" jdbcType="VARCHAR" />
    <result column="phone" property="phone" jdbcType="VARCHAR" />
    <result column="address" property="address" jdbcType="VARCHAR" />
    <result column="speciality" property="speciality" jdbcType="VARCHAR" />
    <result column="need" property="need" jdbcType="VARCHAR" />
    <result column="education" property="education" jdbcType="VARCHAR" />
    <result column="isSingle" property="issingle" jdbcType="VARCHAR" />
    <result column="corporateName" property="corporatename" jdbcType="VARCHAR" />
    <result column="mailbox" property="mailbox" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    uid, groupid, username, password, salt, status, joindate, joinip, lastvisit, lastip, 
    remark, ucuserid, viptime, starttime, endtime, credit1, credit2, type, owner_uid, 
    founder_groupid, agentid, register_type, openid, age, idCard, phone, address, speciality, 
    need, education, isSingle, corporateName, mailbox
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.carryit.base.xmuu.entity.ImsUsersExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ims_users
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from ims_users
    where uid = #{uid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from ims_users
    where uid = #{uid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.carryit.base.xmuu.entity.ImsUsersExample" >
    delete from ims_users
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.carryit.base.xmuu.entity.ImsUsers" >
    insert into ims_users (uid, groupid, username, 
      password, salt, status, 
      joindate, joinip, lastvisit, 
      lastip, remark, ucuserid, 
      viptime, starttime, endtime, 
      credit1, credit2, type, 
      owner_uid, founder_groupid, agentid, 
      register_type, openid, age, 
      idCard, phone, address, 
      speciality, need, education, 
      isSingle, corporateName, mailbox
      )
    values (#{uid,jdbcType=INTEGER}, #{groupid,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, 
      #{password,jdbcType=VARCHAR}, #{salt,jdbcType=VARCHAR}, #{status,jdbcType=TINYINT}, 
      #{joindate,jdbcType=INTEGER}, #{joinip,jdbcType=VARCHAR}, #{lastvisit,jdbcType=INTEGER}, 
      #{lastip,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}, #{ucuserid,jdbcType=INTEGER}, 
      #{viptime,jdbcType=VARCHAR}, #{starttime,jdbcType=INTEGER}, #{endtime,jdbcType=INTEGER}, 
      #{credit1,jdbcType=DECIMAL}, #{credit2,jdbcType=DECIMAL}, #{type,jdbcType=TINYINT}, 
      #{ownerUid,jdbcType=INTEGER}, #{founderGroupid,jdbcType=TINYINT}, #{agentid,jdbcType=INTEGER}, 
      #{registerType,jdbcType=TINYINT}, #{openid,jdbcType=VARCHAR}, #{age,jdbcType=INTEGER}, 
      #{idcard,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, 
      #{speciality,jdbcType=VARCHAR}, #{need,jdbcType=VARCHAR}, #{education,jdbcType=VARCHAR}, 
      #{issingle,jdbcType=VARCHAR}, #{corporatename,jdbcType=VARCHAR}, #{mailbox,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.carryit.base.xmuu.entity.ImsUsers" >
    insert into ims_users
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="uid != null" >
        uid,
      </if>
      <if test="groupid != null" >
        groupid,
      </if>
      <if test="username != null" >
        username,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="salt != null" >
        salt,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="joindate != null" >
        joindate,
      </if>
      <if test="joinip != null" >
        joinip,
      </if>
      <if test="lastvisit != null" >
        lastvisit,
      </if>
      <if test="lastip != null" >
        lastip,
      </if>
      <if test="remark != null" >
        remark,
      </if>
      <if test="ucuserid != null" >
        ucuserid,
      </if>
      <if test="viptime != null" >
        viptime,
      </if>
      <if test="starttime != null" >
        starttime,
      </if>
      <if test="endtime != null" >
        endtime,
      </if>
      <if test="credit1 != null" >
        credit1,
      </if>
      <if test="credit2 != null" >
        credit2,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="ownerUid != null" >
        owner_uid,
      </if>
      <if test="founderGroupid != null" >
        founder_groupid,
      </if>
      <if test="agentid != null" >
        agentid,
      </if>
      <if test="registerType != null" >
        register_type,
      </if>
      <if test="openid != null" >
        openid,
      </if>
      <if test="age != null" >
        age,
      </if>
      <if test="idcard != null" >
        idCard,
      </if>
      <if test="phone != null" >
        phone,
      </if>
      <if test="address != null" >
        address,
      </if>
      <if test="speciality != null" >
        speciality,
      </if>
      <if test="need != null" >
        need,
      </if>
      <if test="education != null" >
        education,
      </if>
      <if test="issingle != null" >
        isSingle,
      </if>
      <if test="corporatename != null" >
        corporateName,
      </if>
      <if test="mailbox != null" >
        mailbox,
      </if>
      <if test="iCode" >
        iCode,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="uid != null" >
        #{uid},
      </if>
      <if test="groupid != null" >
        #{groupid},
      </if>
      <if test="username != null" >
        #{username},
      </if>
      <if test="password != null" >
        #{password},
      </if>
      <if test="salt != null" >
        #{salt},
      </if>
      <if test="status != null" >
        #{status},
      </if>
      <if test="joindate != null" >
        #{joindate},
      </if>
      <if test="joinip != null" >
        #{joinip},
      </if>
      <if test="lastvisit != null" >
        #{lastvisit},
      </if>
      <if test="lastip != null" >
        #{lastip},
      </if>
      <if test="remark != null" >
        #{remark},
      </if>
      <if test="ucuserid != null" >
        #{ucuserid},
      </if>
      <if test="viptime != null" >
        #{viptime},
      </if>
      <if test="starttime != null" >
        #{starttime},
      </if>
      <if test="endtime != null" >
        #{endtime},
      </if>
      <if test="credit1 != null" >
        #{credit1,jdbcType=DECIMAL},
      </if>
      <if test="credit2 != null" >
        #{credit2,jdbcType=DECIMAL},
      </if>
      <if test="type != null" >
        #{type,jdbcType=TINYINT},
      </if>
      <if test="ownerUid != null" >
        #{ownerUid},
      </if>
      <if test="founderGroupid != null" >
        #{founderGroupid},
      </if>
      <if test="agentid != null" >
        #{agentid},
      </if>
      <if test="registerType != null" >
        #{registerType},
      </if>
      <if test="openid != null" >
        #{openid},
      </if>
      <if test="age != null" >
        #{age},
      </if>
      <if test="idcard != null" >
        #{idcard},
      </if>
      <if test="phone != null" >
        #{phone},
      </if>
      <if test="address != null" >
        #{address},
      </if>
      <if test="speciality != null" >
        #{speciality},
      </if>
      <if test="need != null" >
        #{need},
      </if>
      <if test="education != null" >
        #{education},
      </if>
      <if test="issingle != null" >
        #{issingle},
      </if>
      <if test="corporatename != null" >
        #{corporatename},
      </if>
      <if test="mailbox != null" >
        #{mailbox},
      </if>
      <if test="iCode != null" >
        #{iCode},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.carryit.base.xmuu.entity.ImsUsersExample" resultType="java.lang.Integer" >
    select count(*) from ims_users
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update ims_users
    <set >
      <if test="record.uid != null" >
        uid = #{record.uid,jdbcType=INTEGER},
      </if>
      <if test="record.groupid != null" >
        groupid = #{record.groupid,jdbcType=INTEGER},
      </if>
      <if test="record.username != null" >
        username = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null" >
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.salt != null" >
        salt = #{record.salt,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=TINYINT},
      </if>
      <if test="record.joindate != null" >
        joindate = #{record.joindate,jdbcType=INTEGER},
      </if>
      <if test="record.joinip != null" >
        joinip = #{record.joinip,jdbcType=VARCHAR},
      </if>
      <if test="record.lastvisit != null" >
        lastvisit = #{record.lastvisit,jdbcType=INTEGER},
      </if>
      <if test="record.lastip != null" >
        lastip = #{record.lastip,jdbcType=VARCHAR},
      </if>
      <if test="record.remark != null" >
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.ucuserid != null" >
        ucuserid = #{record.ucuserid,jdbcType=INTEGER},
      </if>
      <if test="record.viptime != null" >
        viptime = #{record.viptime,jdbcType=VARCHAR},
      </if>
      <if test="record.starttime != null" >
        starttime = #{record.starttime,jdbcType=INTEGER},
      </if>
      <if test="record.endtime != null" >
        endtime = #{record.endtime,jdbcType=INTEGER},
      </if>
      <if test="record.credit1 != null" >
        credit1 = #{record.credit1,jdbcType=DECIMAL},
      </if>
      <if test="record.credit2 != null" >
        credit2 = #{record.credit2,jdbcType=DECIMAL},
      </if>
      <if test="record.type != null" >
        type = #{record.type,jdbcType=TINYINT},
      </if>
      <if test="record.ownerUid != null" >
        owner_uid = #{record.ownerUid,jdbcType=INTEGER},
      </if>
      <if test="record.founderGroupid != null" >
        founder_groupid = #{record.founderGroupid,jdbcType=TINYINT},
      </if>
      <if test="record.agentid != null" >
        agentid = #{record.agentid,jdbcType=INTEGER},
      </if>
      <if test="record.registerType != null" >
        register_type = #{record.registerType,jdbcType=TINYINT},
      </if>
      <if test="record.openid != null" >
        openid = #{record.openid,jdbcType=VARCHAR},
      </if>
      <if test="record.age != null" >
        age = #{record.age,jdbcType=INTEGER},
      </if>
      <if test="record.idcard != null" >
        idCard = #{record.idcard,jdbcType=VARCHAR},
      </if>
      <if test="record.phone != null" >
        phone = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.address != null" >
        address = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.speciality != null" >
        speciality = #{record.speciality,jdbcType=VARCHAR},
      </if>
      <if test="record.need != null" >
        need = #{record.need,jdbcType=VARCHAR},
      </if>
      <if test="record.education != null" >
        education = #{record.education,jdbcType=VARCHAR},
      </if>
      <if test="record.issingle != null" >
        isSingle = #{record.issingle,jdbcType=VARCHAR},
      </if>
      <if test="record.corporatename != null" >
        corporateName = #{record.corporatename,jdbcType=VARCHAR},
      </if>
      <if test="record.mailbox != null" >
        mailbox = #{record.mailbox,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update ims_users
    set uid = #{record.uid,jdbcType=INTEGER},
      groupid = #{record.groupid,jdbcType=INTEGER},
      username = #{record.username,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      salt = #{record.salt,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=TINYINT},
      joindate = #{record.joindate,jdbcType=INTEGER},
      joinip = #{record.joinip,jdbcType=VARCHAR},
      lastvisit = #{record.lastvisit,jdbcType=INTEGER},
      lastip = #{record.lastip,jdbcType=VARCHAR},
      remark = #{record.remark,jdbcType=VARCHAR},
      ucuserid = #{record.ucuserid,jdbcType=INTEGER},
      viptime = #{record.viptime,jdbcType=VARCHAR},
      starttime = #{record.starttime,jdbcType=INTEGER},
      endtime = #{record.endtime,jdbcType=INTEGER},
      credit1 = #{record.credit1,jdbcType=DECIMAL},
      credit2 = #{record.credit2,jdbcType=DECIMAL},
      type = #{record.type,jdbcType=TINYINT},
      owner_uid = #{record.ownerUid,jdbcType=INTEGER},
      founder_groupid = #{record.founderGroupid,jdbcType=TINYINT},
      agentid = #{record.agentid,jdbcType=INTEGER},
      register_type = #{record.registerType,jdbcType=TINYINT},
      openid = #{record.openid,jdbcType=VARCHAR},
      age = #{record.age,jdbcType=INTEGER},
      idCard = #{record.idcard,jdbcType=VARCHAR},
      phone = #{record.phone,jdbcType=VARCHAR},
      address = #{record.address,jdbcType=VARCHAR},
      speciality = #{record.speciality,jdbcType=VARCHAR},
      need = #{record.need,jdbcType=VARCHAR},
      education = #{record.education,jdbcType=VARCHAR},
      isSingle = #{record.issingle,jdbcType=VARCHAR},
      corporateName = #{record.corporatename,jdbcType=VARCHAR},
      mailbox = #{record.mailbox,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.carryit.base.xmuu.entity.ImsUsers" >
    update ims_users
    <set >
      <if test="groupid != null" >
        groupid = #{groupid,jdbcType=INTEGER},
      </if>
      <if test="username != null" >
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="salt != null" >
        salt = #{salt,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="joindate != null" >
        joindate = #{joindate,jdbcType=INTEGER},
      </if>
      <if test="joinip != null" >
        joinip = #{joinip,jdbcType=VARCHAR},
      </if>
      <if test="lastvisit != null" >
        lastvisit = #{lastvisit,jdbcType=INTEGER},
      </if>
      <if test="lastip != null" >
        lastip = #{lastip,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="ucuserid != null" >
        ucuserid = #{ucuserid,jdbcType=INTEGER},
      </if>
      <if test="viptime != null" >
        viptime = #{viptime,jdbcType=VARCHAR},
      </if>
      <if test="starttime != null" >
        starttime = #{starttime,jdbcType=INTEGER},
      </if>
      <if test="endtime != null" >
        endtime = #{endtime,jdbcType=INTEGER},
      </if>
      <if test="credit1 != null" >
        credit1 = #{credit1,jdbcType=DECIMAL},
      </if>
      <if test="credit2 != null" >
        credit2 = #{credit2,jdbcType=DECIMAL},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=TINYINT},
      </if>
      <if test="ownerUid != null" >
        owner_uid = #{ownerUid,jdbcType=INTEGER},
      </if>
      <if test="founderGroupid != null" >
        founder_groupid = #{founderGroupid,jdbcType=TINYINT},
      </if>
      <if test="agentid != null" >
        agentid = #{agentid,jdbcType=INTEGER},
      </if>
      <if test="registerType != null" >
        register_type = #{registerType,jdbcType=TINYINT},
      </if>
      <if test="openid != null" >
        openid = #{openid,jdbcType=VARCHAR},
      </if>
      <if test="age != null" >
        age = #{age,jdbcType=INTEGER},
      </if>
      <if test="idcard != null" >
        idCard = #{idcard,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="speciality != null" >
        speciality = #{speciality,jdbcType=VARCHAR},
      </if>
      <if test="need != null" >
        need = #{need,jdbcType=VARCHAR},
      </if>
      <if test="education != null" >
        education = #{education,jdbcType=VARCHAR},
      </if>
      <if test="issingle != null" >
        isSingle = #{issingle,jdbcType=VARCHAR},
      </if>
      <if test="corporatename != null" >
        corporateName = #{corporatename,jdbcType=VARCHAR},
      </if>
      <if test="mailbox != null" >
        mailbox = #{mailbox,jdbcType=VARCHAR},
      </if>
    </set>
    where uid = #{uid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.carryit.base.xmuu.entity.ImsUsers" >
    update ims_users
    set groupid = #{groupid,jdbcType=INTEGER},
      username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      salt = #{salt,jdbcType=VARCHAR},
      status = #{status,jdbcType=TINYINT},
      joindate = #{joindate,jdbcType=INTEGER},
      joinip = #{joinip,jdbcType=VARCHAR},
      lastvisit = #{lastvisit,jdbcType=INTEGER},
      lastip = #{lastip,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      ucuserid = #{ucuserid,jdbcType=INTEGER},
      viptime = #{viptime,jdbcType=VARCHAR},
      starttime = #{starttime,jdbcType=INTEGER},
      endtime = #{endtime,jdbcType=INTEGER},
      credit1 = #{credit1,jdbcType=DECIMAL},
      credit2 = #{credit2,jdbcType=DECIMAL},
      type = #{type,jdbcType=TINYINT},
      owner_uid = #{ownerUid,jdbcType=INTEGER},
      founder_groupid = #{founderGroupid,jdbcType=TINYINT},
      agentid = #{agentid,jdbcType=INTEGER},
      register_type = #{registerType,jdbcType=TINYINT},
      openid = #{openid,jdbcType=VARCHAR},
      age = #{age,jdbcType=INTEGER},
      idCard = #{idcard,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      speciality = #{speciality,jdbcType=VARCHAR},
      need = #{need,jdbcType=VARCHAR},
      education = #{education,jdbcType=VARCHAR},
      isSingle = #{issingle,jdbcType=VARCHAR},
      corporateName = #{corporatename,jdbcType=VARCHAR},
      mailbox = #{mailbox,jdbcType=VARCHAR}
    where uid = #{uid,jdbcType=INTEGER}
  </update>
</mapper>